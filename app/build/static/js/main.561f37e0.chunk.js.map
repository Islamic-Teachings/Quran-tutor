{"version":3,"sources":["components/HomepageHeading.tsx","components/ResponsiveContainer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["HomepageHeading","mobile","content","Container","text","Header","as","inverted","style","fontSize","fontWeight","marginBottom","marginTop","Button","primary","size","Icon","name","window","mobilecheck","a","check","navigator","userAgent","vendor","test","substr","getWidth","Responsive","onlyTablet","minWidth","innerWidth","DesktopContainer","state","fixed","hideFixedMenu","setState","showFixedMenu","children","this","props","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Menu","pointing","secondary","Item","active","position","marginLeft","Component","MobileContainer","sidebarOpened","handleSidebarHide","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","visible","Pusher","dimmed","onClick","ResponsiveContainer","console","log","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.561f37e0.chunk.js","sourcesContent":["//@ts-ignore\nimport React, { FunctionComponent } from 'react'\nimport {\n  Container,\n  Header,\n  Button,\n  Icon\n} from 'semantic-ui-react'\n\ntype propTypes = {\n  mobile: boolean,\n  content: string\n}\n\nexport const HomepageHeading: FunctionComponent<propTypes>  = ({ mobile, content }: propTypes) => (\n  <Container text>\n    <Header\n      as='h1'\n      content={content}\n      inverted\n      style={{\n        fontSize: mobile ? '2em' : '4em',\n        fontWeight: 'normal',\n        marginBottom: 0,\n        marginTop: mobile ? '1.5em' : '3em',\n      }}\n    />\n    <Button primary size='huge'>\n      Get Started\n      <Icon name='arrow right' />\n    </Button>\n  </Container>\n)\n","//@ts-ignore\nimport React, { Component, FunctionComponent } from 'react'\nimport {\n  Button,\n  Container,\n  Icon,\n  Menu,\n  Responsive,\n  Segment,\n  Sidebar,\n  Visibility,\n} from 'semantic-ui-react'\n\nimport { HomepageHeading } from './HomepageHeading'\n\nif (!('mobilecheck' in window)) {\n  //@ts-ignore\n  window.mobilecheck = () => {\n    var check = false;\n    ((a) => { if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true; })(navigator.userAgent || navigator.vendor);\n    return check;\n  };\n}\n\ntype DesktopState = {\n  fixed: boolean\n}\n\nconst getWidth = (): number => {\n  const isSSR = typeof window === 'undefined'\n  //@ts-ignore\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopContainer extends Component {\n  state: DesktopState = {\n    fixed: true\n  }\n\n  hideFixedMenu = () => this.setState({ fixed: false })\n  showFixedMenu = () => this.setState({ fixed: true })\n\n  render() {\n    const { children } = this.props\n    const { fixed } = this.state\n\n    return (\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 700, padding: '1em 0em' }}\n            vertical\n          >\n            <Menu\n              fixed={fixed ? 'top' : 'left'}\n              inverted\n              pointing\n              secondary\n              size='large'\n            >\n              <Container>\n                <Menu.Item as='a' active>\n                  Home\n                </Menu.Item>\n                <Menu.Item as='a'>Quran</Menu.Item>\n                <Menu.Item position='right'>\n                  <Button as='a' inverted={!fixed}>\n                    Log in\n                  </Button>\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Container>\n            </Menu>\n            <HomepageHeading mobile={false} content='hey' />\n          </Segment>\n        </Visibility>\n        {children}\n      </Responsive>\n    )\n  }\n}\n\ntype MobileContainerPropType = {\n  sidebarOpened: boolean\n}\n\nclass MobileContainer extends Component {\n  state: MobileContainerPropType = {\n    sidebarOpened: true\n  }\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\n\n  handleToggle = () => this.setState({ sidebarOpened: true })\n\n  render() {\n    const { children } = this.props\n    const { sidebarOpened } = this.state\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getWidth}\n        maxWidth={Responsive.onlyMobile.maxWidth}\n      >\n        <Sidebar\n          as={Menu}\n          animation='push'\n          onHide={this.handleSidebarHide}\n          vertical\n          secondary\n          visible={sidebarOpened}\n        >\n          <Menu.Item as='a' active>\n            Home\n          </Menu.Item>\n          <Menu.Item as='a'>Work</Menu.Item>\n          <Menu.Item as='a'>Company</Menu.Item>\n          <Menu.Item as='a'>Careers</Menu.Item>\n          <Menu.Item as='a'>Log in</Menu.Item>\n          <Menu.Item as='a'>Sign Up</Menu.Item>\n        </Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign='center'\n            style={{ minHeight: 350, padding: '1em 0em' }}\n            vertical\n          >\n            <Container>\n              <Menu inverted pointing secondary size='large'>\n                <Menu.Item onClick={this.handleToggle}>\n                  <Icon name='sidebar' />\n                </Menu.Item>\n                <Menu.Item position='right'>\n                  <Button as='a' inverted>\n                    Log in\n                  </Button>\n                  <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\n                    Sign Up\n                  </Button>\n                </Menu.Item>\n              </Menu>\n            </Container>\n            <HomepageHeading mobile content='Hey' />\n          </Segment>\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    )\n  }\n}\n\n\nexport const ResponsiveContainer: FunctionComponent = ({ children }) => {\n  //@ts-ignore\n  console.log((window.mobilecheck()))\n  return (\n  <div>\n    {\n      //@ts-ignore\n      (window.mobilecheck())\n        ? <MobileContainer>{children}</MobileContainer>\n        : <DesktopContainer>{children}</DesktopContainer>\n    }\n  </div>\n)}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { ResponsiveContainer } from './components';\nimport 'semantic-ui-less/semantic.less'\n\nfunction App() {\n  return (\n    <ResponsiveContainer>\n\n    </ResponsiveContainer>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}